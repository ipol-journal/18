/*codes_flutter.cpp*/
/*
* Copyright 2012 IPOL Image Processing On Line http://www.ipol.im/
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
 * @file codes_flutter.cpp
 * @brief Definitions of available codes for Flutter Shutter Simulation.
 * Contains only definitions.
 * Codes for the Flutter-Shutter Simulator
 * "Code : 0 for Snapshot, 1 for Raskar-code, 2 for rand-code,
 * 3 for constant 1 code, 4 for Sinc-code
 * (sinc code is the best code given v),
 *  5 for Motion-invariant photography code.
 * @author Yohann Tendero <yohann.tendero@cmla.ens-cachan.fr>
 *
 *
 */



#include "codes_flutter.h"



////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////// CODES DEFINITIONS////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

const int num_code=6; //number of code
const int code_length=52; //Number of coefficients of the code

///Definition of the codes


const float code[6][52]=
{
    {
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    },





    {
        1,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
    },




    {
        0.5491,
        -0.4903,
        -0.6919,
        -0.5125,
        -0.9079,
        0.3560,
        -0.6357,
        0.0275,
        0.9568,
        0.8670,
        0.4087,
        0.4097,
        0.8659,
        0.3344,
        0.9198,
        -0.8389,
        0.7476,
        0.9808,
        0.1366,
        -0.7247,
        0.9320,
        0.8069,
        -0.5848,
        0.9493,
        -0.1682,
        0.9533,
        -0.2173,
        -0.5834,
        0.7483,
        0.4785,
        0.2266,
        0.9764,
        -0.4708,
        0.6723,
        0.8312,
        0.0084,
        0.6892,
        -0.5245,
        -0.8651,
        0.3417,
        0.5183,
        0.1317,
        -0.1301,
        0.3432,
        -0.3262,
        0.4367,
        -0.9771,
        -0.2120,
        0.1160,
        0.6648,
        0.9446,
        0.0590,
    },


    {
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,

    },

    {
        0.0002,
        -0.0002,
        0.0002,
        -0.0003,
        0.0003,
        -0.0003,
        0.0003,
        -0.0004,
        0.0004,
        -0.0005,
        0.0005,
        -0.0006,
        0.0007,
        -0.0008,
        0.0009,
        -0.0011,
        0.0014,
        -0.0017,
        0.0021,
        -0.0027,
        0.0037,
        -0.0053,
        0.0082,
        -0.0141,
        0.0296,
        -0.0917,
        1.0000,
        -0.0917,
        0.0296,
        -0.0141,
        0.0082,
        -0.0053,
        0.0037,
        -0.0027,
        0.0021,
        -0.0017,
        0.0014,
        -0.0011,
        0.0009,
        -0.0008,
        0.0007,
        -0.0006,
        0.0005,
        -0.0005,
        0.0004,
        -0.0004,
        0.0003,
        -0.0003,
        0.0003,
        -0.0003,
        0.0002,
        -0.0002,
    },
    {
        //mipcode
        -0.0072629,
        0.0075565,
        -0.0078763,
        0.0082229,
        -0.0086028,
        0.0090181,
        -0.0094769,
        0.0099834,
        -0.010549,
        0.01118,
        -0.011893,
        0.012702,
        -0.01363,
        0.014703,
        -0.015961,
        0.017451,
        -0.01925,
        0.021458,
        -0.024239,
        0.027842,
        -0.032697,
        0.03958,
        -0.050083,
        0.067993,
        -0.10493,
        0.21912,
        1,
        0.29949,
        0.40839,
        0.22649,
        0.29058,
        0.18999,
        0.23588,
        0.16715,
        0.20305,
        0.15111,
        0.18066,
        0.13904,
        0.16419,
        0.12953,
        0.15143,
        0.12177,
        0.14119,
        0.11529,
        0.13274,
        0.10976,
        0.12561,
        0.10498,
        0.11949,
        0.10078,
        0.11418,
        0.097058,
    }


};
